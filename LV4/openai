import utime
import machine
import st7789
import math

# postavljanje TFT displeja
spi = machine.SPI(1, baudrate=32000000, sck=machine.Pin(18), mosi=machine.Pin(19))
display = st7789.ST7789(spi, 240, 240, reset=machine.Pin(20, machine.Pin.OUT), dc=machine.Pin(16, machine.Pin.OUT), cs=machine.Pin(17, machine.Pin.OUT))

# postavljanje pinova za senzor temperature
lm35_pin = machine.ADC(26)

# postavljanje konstanti
TEMP_CONST = 0.1 # tačnost mjerenja temperature
VOLT_CONST = 1000 # pretvaranje napona u milivoltima
V_REF = 3.3 # referentni napon mikrokontrolera

# funkcija za crtanje dijagrama
def draw_graph(data):
    display.fill(0)
    display.rect(0, 0, 240, 240, st7789.color565(255, 255, 255))
    max_temp = max(data)
    min_temp = min(data)
    delta_temp = max_temp - min_temp
    if delta_temp == 0:
        delta_temp = 1
    delta_x = 240 // len(data)
    x = 0
    for i in range(len(data)):
        y = math.floor((data[i] - min_temp) * 240 / delta_temp)
        display.line(x, 240, x, 240-y, st7789.color565(0, 255, 0))
        x += delta_x
    display.show()

# glavna petlja
temperatures = []
while True:
    # čitanje temperature sa senzora
    temp = lm35_pin.read_u16() * V_REF / 65535 / 0.01
    # pretvaranje napona u milivoltima
    voltage = temp * VOLT_CONST
    # dodavanje temperature u listu
    temperatures.append(temp)
    # prikazivanje temperature i napona na TFT displeju
    display.fill(0)
    display.text("Temperatura: {:.1f} C".format(temp), 10, 50, st7789.color565(255, 255, 255))
    display.text("Napon: {:.0f} mV".format(voltage), 10, 80, st7789.color565(255, 255, 255))
    display.show()
    # prikazivanje temperature i napona na serijskom monitoru
    print("Temperatura: {:.1f} C".format(temp))
    print("Napon: {:.0f} mV".format(voltage))
    # crtanje dijagrama promjene temperature u funkciji vremena na TFT displeju
    draw_graph(temperatures)
    # čekanje jedne sekunde prije sljedećeg očitanja
    utime.sleep(1)
